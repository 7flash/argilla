name: Run Argilla python tests

on:
  workflow_call:
    inputs:
      runsOn:
        required: false
        type: string
        default: extended-runner
      pytestArgs:
        description: "Provide extra args to pytest command line"
        required: true
        type: string
      coverageReport:
        required: false
        type: string
        default: coverage
      searchEngineDockerImage:
        description: "The name of the Docker image of the search engine to use."
        default: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
        required: false
        type: string
      searchEngineDockerEnv:
        description: "The name of the Docker image of the search engine to use."
        default: '{"discovery.type": "single-node", "xpack.security.enabled": "false"}'
        required: false
        type: string

jobs:
  run-python-tests:
    name: Argilla python tests
    runs-on: ${{ inputs.runsOn }}
    services:
      search_engine:
        image: ${{ inputs.searchEngineDockerImage }}
        ports:
          - 9200:9200
        env: ${{ fromJson(inputs.searchEngineDockerEnv) }}
    defaults:
      run:
        shell: bash -l {0}
    env:
      COVERAGE_REPORT: ${{ inputs.coverageReport }}
    steps:
      - name: Checkout Code ðŸ›Ž
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-test

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[server,postgresql,tests,integrations]

      - name: Set huggingface hub credentials
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/releases')
        env:
          HF_HUB_ACCESS_TOKEN: ${{ secrets.HF_HUB_ACCESS_TOKEN }}
        run: echo "Enable HF access token"

      - name: Run tests ðŸ“ˆ
        run: |
          ulimit -c unlimited
          python -m pytest --cov=argilla --cov-report=xml:${{ env.COVERAGE_REPORT }}.xml ${{ inputs.pytestArgs }}

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-${{ env.COVERAGE_REPORT }}
          path: ${{ env.COVERAGE_REPORT }}.xml
